## [0.0.5] 2025-03-23 – Box Mechanics & Nickname System
### ✨ Features
- Added **BoxHitbox** with gravity, collision response and respawn logic when falling off the map.
- Implemented **collision response with acid pools**: boxes now respawn when falling into acid.
- Integrated new **hitbox types**: `box`, `door`, `diamond`, and `jump_button`.
- Boxes are now added and rendered in Level 1, fully interactive with characters.
- Added **DeathZone** logic to lava and water pools using `characterType` for Fireboy and Watergirl.
- Exit button in main menu now directly calls `exit(0)` to close the app.

### 🧠 Logic Enhancements
- Added off-screen boundary check for characters, triggering death if player falls off map.
- Characters on top of a box move together with it when pushed from the side.
- Improved lava and water pool structure using `addAll()` for more concise hitbox composition.

### 🛠️ UI Improvements
- Showed **NicknameDialog** after frame when player name is empty in main menu.
- Created **NicknameDialog UI with validation** for player input.
- Removed default player name logic from `PlayerNotifier` and added a proper `name` getter.
- Used **dynamic player name** when joining a multiplayer lobby instead of hardcoded ID.

### 📁 Refactoring & Structure
- Exported new hitbox files in `misc.dart`: `box_hitbox.dart`, `door_hitbox.dart`, `diamond_hitbox.dart`, `jump_button.dart`.
- Refactored lava and water pool components for better composition and readability.

---
This version adds physics mechanics with boxes, improves level collisions and reinforces the player identity system with a custom name system, improving the experience in online mode and in the main menu.



## [0.0.4] 2025-03-22 – Online Multiplayer Integration & Web Deployment
### ✨ Features
- Implemented **online multiplayer support** using `Riverpod` and `Socket.IO` integration.
- Added `GameStartModel`, `PlayerModel`, and `PlayerMoveModel` for managing lobby, player info and movements.
- Created provider logic with `AsyncNotifier` to handle game state updates.
- Added `JumpButton` logic dynamically depending on online mode.
- Developed socket-based movement syncing and real-time lobby handling.

### 🛠️ Fixed
- Replaced hardcoded `playerId: 'Yekale'` with a more descriptive and consistent value `playerId: 'Player 2'` when emitting the `joinSpecificLobby` socket event.
- This change improves clarity and consistency when identifying players in the multiplayer lobby.

### 🧠 Logic Enhancements
- Characters now determine joystick or keyboard control based on platform and online mode.
- JumpButton now targets Fireboy or Watergirl based on `isOnline` status and player identity.
- The main menu now plays and stops music appropriately using `AudioManager`.

### 🚀 Deployment Automation
- Added GitHub Actions workflow to **auto-deploy Flutter Web build to `gh-pages`** when a new release is published.
- Injects proper `<base href="/fireboy_watergirl_flutter/">` into `index.html` after `flutter build web`.
- Publishes built site to `gh-pages` branch via `peaceiris/actions-gh-pages`.

### 🛠️ Refactoring & Improvements
- Replaced checks for null player list with a more robust `isOnline` flag.
- Updated multiple providers and listeners to depend on `AsyncData` safely.
- Improved readability and consistency in event handling and provider access.

### 📁 Dev & Build
- Updated `settings.gradle` to use `com.android.application` version `8.2.1`.
- Added missing `INTERNET` permission to `AndroidManifest.xml` for online support.
- Ignored autogenerated CMake and build system files from version control.

---

This update lays the groundwork for **cooperative online gameplay** and **web deployment automation**, significantly expanding the accessibility and connectivity of the game.


## [0.0.3] 2025-03-03 - Fixed Asset Visibility Issue
### 🛠️ Fixed
- Resolved an issue where certain assets were not displaying in the release version, despite working correctly in `debug` mode.
- Identified that the methods `onDragStart`, `onDragUpdate`, `onDragEnd`, and render were affecting the visibility of elements in `release`.
- Temporarily disabled these methods to ensure proper asset loading and rendering across all versions.

### 🚀 Optimized Image Loading
- Verified the loading of `large_lava_pool.png` and other assets in puddles/, ensuring their correct reference in the code.
- Confirmed that the path `puddles/large_lava_pool.png` is correct and prevented duplication of `assets/images/`.
- Improved game stability in `release`, avoiding path resolution issues.

### 🔍 Debugging and Testing
- Conducted tests in `release` mode (`flutter run --release`) to verify proper asset visibility.
- Adjusted `size` handling within `DragCallbacks` methods to prevent invalid values in `release`.
- Ensured proper behavior of `Hitbox` components in the production environment.


## [0.0.2] 2025-03-03 - Enhanced Visuals and Camera Dynamics Update
### Added
- Implemented camera follow feature for Fireboy with a max speed of 300.
- Updated main menu background to display a logo image instead of a plain black background.
- Applied a dark overlay to the logo image in the main menu for better visibility.

### Changed
- Replaced the background color in the main menu from solid black to an image-based background.

### 🛠️ Fixed
- General improvements to UI consistency.

## [0.0.1] 2025-03-02 - Gameplay Enhancements and Asset Optimization
### 🔥 Features
- Implemented `FireBoyAndWaterGirlGame` core logic.
- Added `MainMenu` overlay system with `overlayBuilderMap`.
- Created a `main_menu.dart` file for handling UI interactions.
- Implemented `CharacterAnimation` class for movement and collision handling.
- Added new `finishLevel()` method for player animation control.

### 🎮 Gameplay Improvements
- Stopped movement when a level is finished using `stopMoving` boolean.
- Added player position reset upon level completion.
- Implemented `onKeyEvent` handling logic to prevent movement when `stopMoving` is enabled.

### 📦 Asset Management
- Updated sound effects (`button_click.mp3`, `button_hover.mp3`, `fan.mp3`) to normalize audio levels.
- Added a new custom font (`custom_font.TTF`) for UI text.
- Optimized `large_acid_pool.png`, `large_lava_pool.png`, and `large_water_pool.png` assets.

### 🛠️ Code Refactoring
- Reorganized `import` statements for better structure.
- Changed file references to use enums instead of hardcoded asset paths.
- Applied `HitboxType` to dynamically load sprites in `acid_pool_hitbox.dart` and `lava_pool_hitbox.dart`.
- Optimized `AudioManager` to support `Future<void>` for async audio playback.
- Updated `audio_type.dart` to include a new `levelComplete` sound.

### 🏗️ Level Design
- Updated `level_1.dart` to include:
  - New door and platform logic.
  - Collision handling for Fireboy and Watergirl.
  - Sound effect for level completion.
  - Zoom-in camera effect when a level is completed.

### 🏆 Game Mechanics
- Implemented hitboxes for:
  - Doors (`door_hitbox.dart`).
  - Platforms (`floor_hitbox.dart`).
  - Acid pools (`acid_pool_hitbox.dart`).
  - Lava pools (`lava_pool_hitbox.dart`).
  - Water pools (`water_pool_hitbox.dart`).
  - Diamonds (`diamond_hitbox.dart`).

### 🔧 Debugging Enhancements
- Added `kDebugMode` check to prevent debug hitboxes from rendering in production.
- Fixed hitbox inconsistencies in `floor_hitbox.dart`.
- Adjusted platform and character positioning for better gameplay flow.

### 🛠️ Dependency Updates
- Added `gap: 3.0.1` to `pubspec.lock`.
---
These updates focus on improving gameplay mechanics, optimizing assets, and refactoring the codebase for better performance and maintainability.
